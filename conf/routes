# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /home                                                controllers.Application.index()
GET 		/													 controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
# Account

GET         /serviceLog                                          controllers.AccountController.getServiceLog()
GET         /serviceLogResult                                    controllers.AccountController.getSearchServiceLogOneDimension()
GET         /serviceLogTimeResult                                controllers.AccountController.getSearchServiceLog()
GET  		/serviceLogWorkflow									 controllers.AccountController.getSearchServiceLogForWorkflow()
GET         /serviceLogRecommend                                 controllers.AccountController.getRecommend()
GET         /datasetRecommend                                    controllers.AccountController.getDatasetRecommend()
GET         /searchServiceLog                                    controllers.AccountController.searchServiceLog()
GET         /serviceLogGraph                                     controllers.AccountController.getLogGraph()
GET         /profileRecommend                                    controllers.AccountController.getScientistRecommend()
POST        /syncData                                            controllers.AccountController.syncData()
GET 		/searchAndGenerateWorkflow							 controllers.AccountController.getSearchAndGenerateWorkflow()
GET 		/generateWorkflowGetData							 controllers.AccountController.getJsonData()

# Authentication
GET         /login                                               controllers.Application.login()
POST        /login                                               controllers.Application.authenticate()
GET         /logout                                              controllers.Application.logout()

# BugReporting
GET         /bugs                                                controllers.BugReportController.reports()
GET         /newReport                                           controllers.BugReportController.newReport()
GET         /bug/list                                            controllers.BugReportController.list()
POST        /delete/report                                       controllers.BugReportController.deleteReport()
POST        /solve/report                                        controllers.BugReportController.solveReport()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                        controllers.Assets.at(path="/public", file)

# About Us
GET         /aboutus                                             controllers.AboutusController.aboutus()
GET         /aboutProject                                        controllers.AboutusController.aboutProject()


# Estimator recommendation
GET         /estimator                                           controllers.EstimateController.estimate(email ?= null, vfile ?= null, dataset ?= null)
GET         /estimator/tutorial                                  controllers.EstimateController.tutorial()
GET         /estimator/login                                     controllers.EstimateController.login()
POST        /estimator/login                                     controllers.EstimateController.authenticate()
GET         /estimator/logout                                    controllers.EstimateController.logout()
GET         /estimator/accountSummary                            controllers.EstimateController.accountSummary(userName ?= null)

# Estimator Registration
GET         /scientist/register                                  controllers.NasaRegistrationController.registrationForm()
POST        /scientist/register/publish                          controllers.NasaRegistrationController.submit()
GET         /scientist/updateUser                                controllers.NasaRegistrationController.updateForm()
POST        /estimator/updateUser/update                         controllers.NasaRegistrationController.update()
GET         /scientist/deleteUser                                controllers.NasaRegistrationController.deleteForm()
POST        /scientist/deleteUser/delete                         controllers.NasaRegistrationController.delete()
GET         /estimator/adminPage                                 controllers.NasaRegistrationController.adminPage()
GET			/scientist/allUsers									 controllers.NasaRegistrationController.getAllUsers()
GET		    /scientist/addUser									 controllers.NasaRegistrationController.addUser()
GET      	/scientist/addUserForm 								 controllers.NasaRegistrationController.addUserForm()

# Climate Model
GET		/climate			controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET		/climate/tutorial		controllers.ClimateServiceController.tutorial()
GET		/climate/login		controllers.ClimateServiceController.login()
POST    /climate/login        controllers.ClimateServiceController.authenticate()
GET     /climate/logout       controllers.ClimateServiceController.logout()
GET		/climate/accountSummary		controllers.ClimateServiceController.accountSummary(userName ?= null)
GET		/climate/climateServices	controllers.ClimateServiceController.climateServices()
GET		/climate/mostRecentlyAddedClimateServices	controllers.ClimateServiceController.mostRecentlyAddedClimateServices()
GET		/climate/mostRecentlyUsedClimateServices	controllers.ClimateServiceController.mostRecentlyUsedClimateServices()
GET		/climate/mostPopularClimateServices	controllers.ClimateServiceController.mostPopularClimateServices()
POST    /climate/new/climateServices    controllers.ClimateServiceController.newClimateService()
POST    /climate/delete/climateServices   controllers.ClimateServiceController.deleteClimateService()
POST	/climate/download/climateServices	 controllers.ClimateServiceController.downloadClimateService()
POST	/climate/edit/climateServices		controllers.ClimateServiceController.editClimateService()
GET		/climate/new/climateServices		controllers.ClimateServiceController.addClimateServices()
GET		/serviceLog/conf		controllers.ClimateServiceController.getConfigurationByConfId()
POST    /climate/delete/serviceLog   controllers.ClimateServiceController.deleteServiceLog()
GET		/climate/oneService		controllers.ClimateServiceController.oneService(url ?= null)

#Keyword search
GET 	    /climate/dataSets/						controllers.dataSetController.datasetList()
GET         /climate/dataSets/*id                    controllers.KeywordSearchController.getDataSetList(id)
GET			/climate/searchDataSet 					 controllers.dataSetController.searchDataset()
GET 		/climate/getSearchResult				 controllers.dataSetController.getSearchResult()
GET         /climate/recommendation						controllers.KeywordSearchController.searchPage()
POST        /climate/recommendation/keywordSearch                      controllers.KeywordSearchController.keywordSearch()
GET         /climate/recommendation/displayResult/*id                  controllers.KeywordSearchController.displayResult(id)
POST        /climate/recommendation/selectedKeywordSearch              controllers.KeywordSearchController.selectedKeywordSearch()
GET         /climate/keywordTree/                       controllers.KeywordSearchController.getKeywordTree(id :String)

#for pages
GET     /assets/*file               controllers.Assets.at(path="/public", file)